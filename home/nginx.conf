
user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    #开启高效模式文件传输模式，将tcp_nopush和tcp_nodelay两个指另设置为on，用于防止网络阻塞。
    sendfile    on;
    tcp_nopush  on;
    tcp_nodelay on;
    #设置客户端连接保持活动的超时时间
    keepalive_timeout   65;
    server_tokens   off;

#配置代理参数
    proxy_redirect off;
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    client_max_body_size 10m;
    client_body_buffer_size 128k;
    proxy_connect_timeout 65;
    proxy_send_timeout 65;
    proxy_read_timeout 65;     
    proxy_buffer_size 4k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 64k;

    #开启gzip
    gzip    on;
    #允许压缩的最小字节数
    gzip_min_length 1k;
    #4个单位为16k的内存作为压缩结果流缓存
    gzip_buffers 4 16k;
    #设置识别HTTP协议版本，默认是1.1
    gzip_http_version 1.1;
    #gzip压缩比，可在1~9中设置，1压缩比最小，速度最快，9压缩比最大，速度最慢，消耗CPU
    gzip_comp_level 2;
    #压缩的类型
    gzip_types text/plain application/x-javascript text/css application/xml;
    #让前端的缓存服务器混村经过的gzip压缩的页面
    gzip_vary   on;

    include /etc/nginx/conf.d/*.conf;

    #homepage chunsiyang.myddns.me
    server {
	    listen 8080;
	    server_name chunsiyang.myddns.me;
	    root   /etc/nginx/home/;
	    location / {
            root   /etc/nginx/home/;
            autoindex on;
        }
    }

    #webui-aria2 chunsiyang.myddns.me
    server {
	    listen 9100;
	    server_name chunsiyang.myddns.me;
	    root   /etc/nginx/webui-aria2/;
	    location / {
            root   /etc/nginx/webui-aria2/;
            autoindex on;
        }
    	 error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

    }

}

